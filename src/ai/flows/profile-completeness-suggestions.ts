// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered tool that analyzes LinkedIn profile data, identifies missing information, and suggests improvements.
 *
 * - profileCompletenessSuggestions - A function that provides profile completeness suggestions.
 * - ProfileCompletenessSuggestionsInput - The input type for the profileCompletenessSuggestions function.
 * - ProfileCompletenessSuggestionsOutput - The return type for the profileCompletenessSuggestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProfileCompletenessSuggestionsInputSchema = z.object({
  profileData: z.string().describe('The LinkedIn profile data as a JSON string.'),
});
export type ProfileCompletenessSuggestionsInput = z.infer<typeof ProfileCompletenessSuggestionsInputSchema>;

const ProfileCompletenessSuggestionsOutputSchema = z.object({
  suggestions: z.array(z.string()).describe('An array of suggestions to improve the LinkedIn profile.'),
});
export type ProfileCompletenessSuggestionsOutput = z.infer<typeof ProfileCompletenessSuggestionsOutputSchema>;

export async function profileCompletenessSuggestions(input: ProfileCompletenessSuggestionsInput): Promise<ProfileCompletenessSuggestionsOutput> {
  return profileCompletenessSuggestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'profileCompletenessSuggestionsPrompt',
  input: {schema: ProfileCompletenessSuggestionsInputSchema},
  output: {schema: ProfileCompletenessSuggestionsOutputSchema},
  prompt: `You are an AI career coach specializing in LinkedIn profile optimization.

  Analyze the following LinkedIn profile data and provide specific, actionable suggestions to improve the profile for CV presentation. Focus on completeness, clarity, and impact. Provide an array of suggestions.

  Profile Data: {{{profileData}}}
  Suggestions:`, // Ensure array of suggestions
});

const profileCompletenessSuggestionsFlow = ai.defineFlow(
  {
    name: 'profileCompletenessSuggestionsFlow',
    inputSchema: ProfileCompletenessSuggestionsInputSchema,
    outputSchema: ProfileCompletenessSuggestionsOutputSchema,
  },
  async input => {
    try {
      const {output} = await prompt(input);
      return output!;
    } catch (error) {
      console.error('Error in profileCompletenessSuggestionsFlow:', error);
      throw error;
    }
  }
);
